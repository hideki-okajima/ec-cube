name: Weekly test for EC-CUBE
#on: push
on:
  schedule:
    # 日曜日の 00:00 (JST) に処理を実行する
    # UTC の 15:00 は JST だと翌日の 00:00
    - cron:  '0 * * * *'
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup PHP
        uses: nanasess/setup-php@master
        with:
          php-version: '7.3'

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install to Composer
        run: composer install --no-scripts --no-dev --no-interaction --optimize-autoloader

      - name: Translate to templates
        run: php bin/template_jp.php

      - run: echo "::set-env name=PACKAGING_DATE::$(date +%Y%m%d)"

      - name: Packaging
        working-directory: ../
        env:
          REPOSITORY_NAME: ${{ github.event.repository.name }}
          OUTPUT_DIR: _output
        run: |
          rm -rf $GITHUB_WORKSPACE/.editorconfig
          rm -rf $GITHUB_WORKSPACE/.gitignore
          rm -rf $GITHUB_WORKSPACE/.buildpath
          rm -rf $GITHUB_WORKSPACE/.gitmodules
          rm -rf $GITHUB_WORKSPACE/.scrutinizer.yml
          rm -rf $GITHUB_WORKSPACE/.travis.yml
          rm -rf $GITHUB_WORKSPACE/appveyor.yml
          rm -rf $GITHUB_WORKSPACE/.coveralls.yml
          rm -rf $GITHUB_WORKSPACE/.php_cs.dist
          rm -rf $GITHUB_WORKSPACE/phpunit.xml.dist
          rm -rf $GITHUB_WORKSPACE/app.json
          rm -rf $GITHUB_WORKSPACE/Procfile
          rm -rf $GITHUB_WORKSPACE/LICENSE.txt
          rm -rf $GITHUB_WORKSPACE/README.md
          rm -rf $GITHUB_WORKSPACE/codeception.sh
          rm -rf $GITHUB_WORKSPACE/codeception.yml
          rm -rf $GITHUB_WORKSPACE/app/Plugin/*
          rm -rf $GITHUB_WORKSPACE/codeception
          rm -rf $GITHUB_WORKSPACE/tests
          rm -rf $GITHUB_WORKSPACE/.github
          find $GITHUB_WORKSPACE -name "dummy" -print0 | xargs -0 rm -rf
          find $GITHUB_WORKSPACE -name ".git*" -and ! -name ".gitkeep" -print0 | xargs -0 rm -rf
          find $GITHUB_WORKSPACE -name ".git*" -type d -print0 | xargs -0 rm -rf

          echo "set permissions..."
          chmod -R o+w $GITHUB_WORKSPACE

          echo "complession files..."
          mkdir $OUTPUT_DIR
          tar czfp eccube-$PACKAGING_DATE.tar.gz $REPOSITORY_NAME
          zip -ry eccube-$PACKAGING_DATE.zip $REPOSITORY_NAME 1> /dev/null
          md5sum eccube-$PACKAGING_DATE.tar.gz | awk '{ print $1 }' > $OUTPUT_DIR/eccube-$PACKAGING_DATE.tar.gz.checksum.md5
          md5sum eccube-$PACKAGING_DATE.zip | awk '{ print $1 }' > $OUTPUT_DIR/eccube-$PACKAGING_DATE.zip.checksum.md5
          sha1sum eccube-$PACKAGING_DATE.tar.gz | awk '{ print $1 }' > $OUTPUT_DIR/eccube-$PACKAGING_DATE.tar.gz.checksum.sha1
          sha1sum eccube-$PACKAGING_DATE.zip | awk '{ print $1 }' > $OUTPUT_DIR/eccube-$PACKAGING_DATE.zip.checksum.sha1
          sha256sum eccube-$PACKAGING_DATE.tar.gz | awk '{ print $1 }' > $OUTPUT_DIR/eccube-$PACKAGING_DATE.tar.gz.checksum.sha256
          sha256sum eccube-$PACKAGING_DATE.zip | awk '{ print $1 }' > $OUTPUT_DIR/eccube-$PACKAGING_DATE.zip.checksum.sha256
          mv eccube-$PACKAGING_DATE.tar.gz $OUTPUT_DIR/
          mv eccube-$PACKAGING_DATE.zip $OUTPUT_DIR/
          ls -al $OUTPUT_DIR

      - name: Upload packages
        uses: actions/upload-artifact@v2
        with:
          name: eccube-$PACKAGING_DATE
          path: ${{ runner.workspace }}/_output/
