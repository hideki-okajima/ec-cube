name: Plugin test for EC-CUBE
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths:
      - '**'
      - '!*.md'
  pull_request:
    paths:
      - '**'
      - '!*.md'
jobs:
  plugin-install:
    name: Plugin install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ ubuntu-18.04 ]
        php: [ 7.3 ]
        db: [ pgsql ]
        method:
          - test_install_enable_disable_enable_disable_remove_store
        include:
          - db: pgsql
            database_url: postgres://postgres:password@127.0.0.1:5432/eccube_db
            database_server_version: 11

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: nanasess/setup-php@master
        with:
          php-version: ${{ matrix.php }}

      - name: composer install
        run: |
          composer selfupdate
          composer install --dev --no-interaction -o --apcu-autoloader

      - name: Setup to EC-CUBE
        env:
          APP_ENV: 'codeception'
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
        run: |
          echo "APP_ENV=${APP_ENV}" > .env
          bin/console doctrine:database:create --env=dev
          bin/console doctrine:schema:create --env=dev
          bin/console eccube:fixtures:load --env=dev

      - name: Update baseinfo with pgsql
        if: matrix.db == 'pgsql'
        env:
          PGPASSWORD: 'password'
        run: |
          sudo apt-fast install -y postgresql-client
          psql eccube_db -h 127.0.0.1 -U postgres -c "update dtb_base_info set authentication_key='test';"

      ## ${PWD}/repos does not exist so service cannot be started
      - name: Run package-api
        run: |
          if [[ ! -d ${PWD}/repos ]]; then mkdir -p ${PWD}/repos ; fi
          docker run -d --rm -v ${PWD}/repos:/repos -e MOCK_REPO_DIR=/repos -p 8080:8080 eccube/mock-package-api
          sleep 30

      - name: Install Plugins
        env:
          APP_ENV: 'prod'
          DATABASE_URL: postgres://postgres:password@127.0.0.1:5432/eccube_db
          DATABASE_SERVER_VERSION: 11
          ECCUBE_PACKAGE_API_URL: 'http://localhost:8080'
        run: |
          ls ${PWD}/repos
          bin/console eccube:composer:require "ec-cube/Horizon:^1.0"

      - name: Upload evidence
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: plugin-install-${{ matrix.method }}-evidence
          path: codeception/_output/
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: plugin-install-${{ matrix.method }}-logs
          path: var/log/
